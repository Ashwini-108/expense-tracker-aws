name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.9'

jobs:
  test:
    name: 🧪 Test & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 📚 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 bandit pytest-cov
    
    - name: 🔍 Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: 🔒 Security check with bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ || true
    
    - name: 🧪 Run tests with coverage
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
        S3_BUCKET_NAME: expense-tracker-ashwini-4
        CLOUDWATCH_LOG_GROUP: expense-tracker-logs
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: 📤 Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports
        path: |
          coverage.xml
          htmlcov/
          bandit-report.json

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🏷️ Create Release Tag
      id: create_tag
      run: |
        TAG_NAME="v$(date +'%Y.%m.%d')-${GITHUB_SHA::8}"
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "Tagged as: $TAG_NAME"
    
    - name: 🚀 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag_name }}
        release_name: Release ${{ steps.create_tag.outputs.tag_name }}
        body: |
          ## Expense Tracker Release
          - AWS S3 integration for data storage
          - CloudWatch logging for activity monitoring
          - CLI interface for expense management
          - All tests passed ✅
        draft: false
        prerelease: false